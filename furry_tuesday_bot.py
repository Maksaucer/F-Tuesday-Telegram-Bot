import logging
import os
import datetime
import asyncio
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types, Router
from aiogram.filters import Command
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –í–°–ï —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ user_storage.py
from user_storage import *

    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –í–°–ï —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ e621_parser.py
from E621_parser import *

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

# –ö–ª—é—á–∏
TOKEN = os.getenv("TOKEN")
E621_USERNAME = os.getenv("E621_USERNAME")
E621_API_KEY = os.getenv("E621_API_KEY")
USER_AGENT = 'FurryTuesdayBot/1.0 (by @maksaucer)'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=TOKEN)
dp = Dispatcher()
router = Router()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üîû –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É")],
        [KeyboardButton(text="‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è")]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
)

# –ú–µ–Ω—é ¬´–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É¬ª
# 1) –°–ª—É—á–∞–π–Ω–∞—è
# 2) –õ—É—á—à–∞—è –∑–∞ –ø–µ—Ä–∏–æ–¥ (–≤–µ–¥—ë—Ç –∫ period_menu)
get_image_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞")],
        [KeyboardButton(text="üï∞ –õ—É—á—à–∞—è –∑–∞ –ø–µ—Ä–∏–æ–¥")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
)

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–ø–æ–¥–º–µ–Ω—é ¬´–õ—É—á—à–∞—è –∑–∞ –ø–µ—Ä–∏–æ–¥¬ª)
period_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="ü•â –ó–∞ –¥–µ–Ω—å")],
        [KeyboardButton(text="ü•à –ó–∞ –Ω–µ–¥–µ–ª—é")],
        [KeyboardButton(text="ü•á –ó–∞ –º–µ—Å—è—Ü")],
        [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
    ],
    resize_keyboard=True,
    input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥"
)

# === –§–£–ù–ö–¶–ò–ò ===

async def send_random_image(chat_id: int):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é chat_id
    """
    post = await fetch_random_post(E621_USERNAME, E621_API_KEY, USER_AGENT)
    if not post:
        await bot.send_message(chat_id, "üòû –°–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    image_url = post["sample"]["url"]
    post_url = f"https://e621.net/posts/{post['id']}"

    try:
        await bot.send_photo(chat_id, image_url, caption=post_url)
        logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    except Exception as e:
        logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_image(chat_id: int, period: str = "week"):
    """
    –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∞–º—É—é –ø–æ–ø—É–ª—è—Ä–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∑–∞ period (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞ –Ω–µ–¥–µ–ª—é).
    """
    post = await fetch_post(E621_USERNAME, E621_API_KEY, USER_AGENT, period=period)
    if not post:
        await bot.send_message(chat_id, "üòû –ö–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    image_url = post["sample"]["url"]
    post_url = f"https://e621.net/posts/{post['id']}"

    try:
        await bot.send_photo(chat_id, image_url, caption=post_url)
        logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    except Exception as e:
        logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")


async def send_image_toeveryone(period="week"):
    """
    –†–∞—Å—Å—ã–ª–∫–∞ —Å–∞–º–æ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π period –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    """
    users = load_users()
    for user_id in users:
        try:
            await send_image(user_id, period=period)
        except Exception as e:
            logging.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {user_id}: {e}")


# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏, –ø–æ –≤—Ç–æ—Ä–Ω–∏–∫–∞–º
async def scheduler():
    while True:
        now = datetime.datetime.now()
        if now.weekday() == 1:  # –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫=0, –í—Ç–æ—Ä–Ω–∏–∫=1
            await send_image_toeveryone(period="day")
            # –ó–∞—Å—ã–ø–∞–µ–º –Ω–∞ 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤ —Ç–æ—Ç –∂–µ –≤—Ç–æ—Ä–Ω–∏–∫
            await asyncio.sleep(24 * 3600)
        else:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞
            await asyncio.sleep(24 * 3600)


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    dp.include_router(router)
    # –ó–∞–ø—É—Å–∫–∞–µ–º —à–µ–¥—É–ª–µ—Ä –≤ —Ñ–æ–Ω–µ
    asyncio.create_task(scheduler())
    # –°—Ç–∞—Ä—Ç—É–µ–º –ª–æ–Ω–≥-–ø–æ–ª–ª–∏–Ω–≥
    await dp.start_polling(bot)


# === –•—ç–Ω–¥–ª–µ—Ä—ã ===

@router.message(Command("start"))
async def start_handler(message: Message):
    chat_id = message.chat.id
    print(f"‚ñ∂Ô∏è /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {chat_id}")
    add_user(chat_id)
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å e621. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )


@router.message()
async def handle_buttons(message: Message):
    chat_id = message.chat.id
    text = message.text

    match text:
        # 1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª ¬´–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É¬ª –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
        case "üîû –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É":
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–∞—Ä—Ç–∏–Ω–∫–∏:", reply_markup=get_image_menu)

        # 2. –ü–æ–¥–º–µ–Ω—é ¬´–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É¬ª
        case "üé≤ –°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞":
            await send_random_image(chat_id)

        case "üï∞ –õ—É—á—à–∞—è –∑–∞ –ø–µ—Ä–∏–æ–¥":
            await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:", reply_markup=period_menu)

        # 3. –ü–æ–¥–º–µ–Ω—é ¬´–õ—É—á—à–∞—è –∑–∞ –ø–µ—Ä–∏–æ–¥¬ª
        case "ü•â –ó–∞ –¥–µ–Ω—å":
            await send_image(chat_id, period="day")

        case "ü•à –ó–∞ –Ω–µ–¥–µ–ª—é":
            await send_image(chat_id, period="week")

        case "ü•á –ó–∞ –º–µ—Å—è—Ü":
            await send_image(chat_id, period="month")

        # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
        case "üîô –ù–∞–∑–∞–¥":
            # –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ ¬´–ù–∞–∑–∞–¥¬ª ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

        # –ö–Ω–æ–ø–∫–∞ ¬´–û—Ç–ø–∏—Å–∞—Ç—å—Å—è¬ª
        case "‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è":
            remove_user(chat_id)
            await message.answer("–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ üì¥", reply_markup=ReplyKeyboardRemove())

        # –ß—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ–µ
        case _:
            await message.answer("–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏.")


if __name__ == "__main__":
    asyncio.run(main())