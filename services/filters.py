from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from database.filters import get_filters, add_filter, remove_filter

async def get_filters_inline_keyboard(chat_id: int) -> InlineKeyboardMarkup:
    filters = await get_filters(chat_id)
    nsfw_status = "‚úÖ –í–ö–õ" if "nsfw" in filters else "‚ùå –í–´–ö–õ"
    male_status = "‚úÖ –í–ö–õ" if "male/male" in filters else "‚ùå –í–´–ö–õ"

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"üö´ NSFW: {nsfw_status}", callback_data="toggle_nsfw"),
                InlineKeyboardButton(text=f"üö´ Male/Male: {male_status}", callback_data="toggle_male"),
            ]
        ]
    )

def get_rating_label(rating: str) -> str:
    rating = rating.lower()
    match rating:
        case "s":
            return "‚úÖ Safe"
        case "q":
            return "‚ö†Ô∏è Questionable"
        case "e":
            return "üîû Explicit"
        case _:
            return "‚ùî Unknown"

def is_post_allowed(post: dict, filters: list[str]) -> bool:
    if not filters:
        return True  # –ù–µ—Ç —Ñ–∏–ª—å—Ç—Ä–æ–≤ ‚Äî –≤—Å—ë –ø–æ–∑–≤–æ–ª–µ–Ω–æ

    # –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    filters = set(tag.lower() for tag in filters)

    # --- 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ NSFW –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É ---
    rating = post.get("rating", "").lower()  # –º–æ–∂–µ—Ç –±—ã—Ç—å "e", "q", "s"
    if "nsfw" in filters and rating in ("e", "q"):
        return False


    # --- 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–≥–æ–≤ ---
    tags = []
    for tag_list in post.get("tags", {}).values():
        tags.extend(tag_list)

    tags = set(tag.lower() for tag in tags)

    return not filters.intersection(tags)