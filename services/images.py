import logging
from config import E621_USERNAME, E621_API_KEY, USER_AGENT
from parsers.e621 import fetch_posts, fetch_random_post
from database.users import get_username, load_users
from database.filters import get_filters
from services.filters import is_post_allowed, get_rating_label
from aiogram import Bot

FURRY_TUESDAY_CAPTION = "üòà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ—É—Ä—Ä–∏ –≤—Ç–æ—Ä–Ω–∏–∫! üòà\n" #temporary 

async def send_random_image(bot: Bot, user_id: int):
    filters = await get_filters(user_id)
    username = await get_username(user_id)

    for attempt in range(10):
        post = await fetch_random_post(E621_USERNAME, E621_API_KEY, USER_AGENT)
        if not post:
            break

        if not is_post_allowed(post, filters):
            logging.info(f"‚õî –°–ª—É—á–∞–π–Ω—ã–π –ø–æ—Å—Ç {post['id']} —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} - @{username}, –ø—Ä–æ–ø—É—â–µ–Ω.")
            continue

        image_url = post["sample"]["url"]
        post_url = f"https://e621.net/posts/{post['id']}"
        rating = get_rating_label(post.get("rating", ""))

        caption = f"{rating}\n{post_url}"
        try:
            await bot.send_photo(user_id, image_url, caption=caption)
            logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username} (—Ä–µ–π—Ç–∏–Ω–≥: {rating})")
        except Exception as e:
            logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username}: {e}")
        return

    await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")

async def send_image(bot: Bot, user_id: int, period: str = "week", caption: str = ""):
    filters = await get_filters(user_id)
    username = await get_username(user_id)

    if caption == FURRY_TUESDAY_CAPTION:
        posts = await fetch_posts(E621_USERNAME, E621_API_KEY, USER_AGENT, period=period, limit=100)
    else:
        posts = await fetch_posts(E621_USERNAME, E621_API_KEY, USER_AGENT, period=period, limit=50)

    if not posts:
        await bot.send_message(user_id, "üòû –ò–∑ 50 –ø–æ—Å—Ç–æ–≤ –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º –∫–∞—Ä—Ç–∏–Ω–∫—É.")
        return

    cnt = 0
    for post in posts:
        cnt+=1
        if not is_post_allowed(post, filters):
            logging.info(f"‚õî –ü–æ—Å—Ç {post['id']} —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Ç–µ–≥–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} - @{username}, –ø—Ä–æ–ø—É—â–µ–Ω. #post[{cnt}]")
            continue

        image_url = post["sample"]["url"]
        post_url = f"https://e621.net/posts/{post['id']}"
        rating = get_rating_label(post.get("rating", ""))

        caption += f"{rating}\n{post_url}"

        try:
            await bot.send_photo(user_id, image_url, caption=caption)
            logging.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username} (—Ä–µ–π—Ç–∏–Ω–≥: {rating})")
        except Exception as e:
            logging.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - @{username}: {e}")
        return
    if caption == FURRY_TUESDAY_CAPTION:
        await bot.send_message(user_id, "üòû –§—É—Ä—Ä–∏ –≤—Ç–æ—Ä–Ω–∏–∫ –æ—Ç–º–µ–Ω–µ–Ω - —É –≤–∞—Å —Å–ª–∏—à–∫–æ–º –∂–µ—Å—Ç–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ NSFW.")
    else:
        await bot.send_message(user_id, "üòû –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –≤–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")

async def send_image_toeveryone(bot: Bot, period: str = "week"):
    users = await load_users()
    for user_id in users:
        try:
            await send_image(bot, user_id, period=period, caption=FURRY_TUESDAY_CAPTION)
        except Exception as e:
            logging.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ {user_id}: {e}")
